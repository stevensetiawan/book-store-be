openapi: 3.0.0
info:
  title: Your API
  description: Description of your API
  version: 1.0.0
paths:
  /api/v1/book-store/user/register:
    post:
      summary: "Register a new user"
      description: "Registers a new user with the provided name, email, and password."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User registration details"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
                description: "Name of the user"
              email:
                type: "string"
                format: "email"
                description: "Email address of the user"
              password:
                type: "string"
                description: "Password of the user"
      responses:
        200:
          description: "User registration successful"
        500:
          description: "Internal server error"
  /api/v1/book-store/user/login:
    post:
      summary: "Authenticate and login a user"
      description: "Authenticates a user with the provided credentials and generates a JWT token."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User login credentials"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
                format: "email"
                description: "Email address of the user"
              password:
                type: "string"
                description: "Password of the user"
      responses:
        200:
          description: "User login successful"
          schema:
            type: "object"
            properties:
              token:
                type: "string"
                description: "JWT token for authenticated user"
        400:
          description: "Bad request or invalid credentials"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                description: "Error message"
  securityDefinitions:
    BearerAuth:
      type: apiKey
      name: Authorization
      in: header
      description: "JWT Authorization header using the Bearer scheme"
  /api/v1/book-store/user/{id}:
    get:
      summary: "Get user by ID"
      description: "Retrieves user details by ID."
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "ID of the user to retrieve"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Successful response"
        400:
          description: "Bad request"
        500:
          description: "Internal server error"
  /api/v1/book-store/orders:
    post:
      summary: Create an order
      description: Endpoint to create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                books:
                  type: array
                  items:
                    type: object
                    properties:
                      book_id:
                        type: integer
                      quantity:
                        type: integer
                      point:
                        type: integer
                    required:
                      - book_id
                      - quantity
                      - point
                  required:
                    - book_id
                    - quantity
                    - point
              required:
                - books
      responses:
        '200':
          description: Order successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                  totalQuantity:
                    type: integer
                  totalPoints:
                    type: integer
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      summary: "Cancel order"
      description: "Cancels an existing order."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "ID of the order to cancel"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Cancellation details"
          required: true
          schema:
            $ref: "#/definitions/CancelOrderRequest"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/Order"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /api/v1/book-store/books:
    get:
      summary: "Fetch books"
      description: "Retrieves a list of books."
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "page"
          description: "Page number for pagination (optional)"
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        500:
          description: "Internal server error"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                description: "Error message"


